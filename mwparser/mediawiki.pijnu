wikitext
<toolset>
def replace_by_space(node):
    node.value = ' '

def replace_by_2_spaces(node):
    node.value = ' '

def replace_by_8_spaces(node):
    node.value = ' '

<definition>
# Codes

    LF                      : '\x0a'                                                                : drop
    CR                      : '\x0d'                                                                : drop
    CRLF                    : "\x0d\x0a"                                                            : drop
    EOL                     : CRLF / LF / CR                                                        : drop
    L_BRACKET               : "["                                                                   : drop
    R_BRACKET               : "\]"                                                                  : drop
    L_BRACE                 : "{"                                                                   : drop
    R_BRACE                 : "}"                                                                   : drop
    SPACE                   : " "                                                                   : drop
    TAB                     : "	"                                                                   : drop
    SPACETAB                : SPACE / TAB                                                           : drop
    SPACETABEOL             : SPACE / TAB / EOL                                                     : drop
    AMP                     : "&"                                                                   : drop
    PIPE                    : "|"                                                                   : drop
    BANG                    : "!"                                                                   : drop
    EQUAL                   : "="                                                                   : drop
    BULLET                  : "*"                                                                   : drop
    HASH                    : "#"                                                                   : drop
    COLON                   : ":"                                                                   : drop
    LT                      : "<"                                                                   : render_lt
    GT                      : ">"                                                                   : render_gt
    SLASH                   : "/"                                                                   : drop
    SEMICOLON               : ";"                                                                   : drop
    DASH                    : "-"                                                                   : drop
    TABLE_BEGIN             : "{|"                                                                  : drop
    TABLE_END               : "|}"                                                                  : drop
    TABLE_NEWLINE           : "|-"                                                                  : drop
    TABLE_TITLE             : "|+"                                                                  : drop
    QUOTE                   : "\""                                                                  : drop
    APOSTROPHE              : "\'"                                                                  : drop
    TITLE6_BEGIN            : EQUAL{6}                                                              : drop
    TITLE5_BEGIN            : EQUAL{5}                                                              : drop
    TITLE4_BEGIN            : EQUAL{4}                                                              : drop
    TITLE3_BEGIN            : EQUAL{3}                                                              : drop
    TITLE2_BEGIN            : EQUAL{2}                                                              : drop
    TITLE1_BEGIN            : EQUAL{1}                                                              : drop
    TITLE6_END              : EQUAL{6} SPACETAB* EOL                                                : drop
    TITLE5_END              : EQUAL{5} SPACETAB* EOL                                                : drop
    TITLE4_END              : EQUAL{4} SPACETAB* EOL                                                : drop
    TITLE3_END              : EQUAL{3} SPACETAB* EOL                                                : drop
    TITLE2_END              : EQUAL{2} SPACETAB* EOL                                                : drop
    TITLE1_END              : EQUAL{1} SPACETAB* EOL                                                : drop
    LINK_BEGIN              : L_BRACKET{2}                                                          : drop
    LINK_END                : R_BRACKET{2}                                                          : drop

# Protocols

    HTTPS                   : "https://"                                                            : liftValue
    HTTP                    : "http://"                                                             : liftValue
    FTP                     : "ftp://"                                                              : liftValue
    protocol                : HTTPS / HTTP / FTP                                                    : liftValue

    HTTPS_DROP              : "https://"                                                            : drop
    HTTP_DROP               : "http://"                                                             : drop
    FTP_DROP                : "ftp://"                                                              : drop
    protocol_DROP           : HTTPS / HTTP / FTP                                                    : drop

# Predefined HTML tags

    NOWIKI_BEGIN            : "<nowiki>"                                                            : drop
    NOWIKI_END              : "</nowiki>"                                                           : drop
    PRE_BEGIN               : "<pre>"                                                               : drop
    PRE_END                 : "</pre>"                                                              : drop
    QUOTE_KEEP              : QUOTE                                                                 : restore
    SOURCE_TAG_START        : "<source"                                                             : drop
    SOURCE_TAG_GT           : GT                                                                    : drop
    SOURCE_LANG_NAME        : [a..zA..Z0..9 ]+
    SOURCE_TAG_LANG         : "lang=" QUOTE_KEEP? SOURCE_LANG_NAME QUOTE_KEEP?
    SOURCE_TAG_ATTRIBUTE    : ( SPACETABEOL* SOURCE_TAG_LANG )                                      : liftNode
    SOURCE_BEGIN            : SOURCE_TAG_START SOURCE_TAG_ATTRIBUTE? SPACETABEOL* SOURCE_TAG_GT (SPACETAB* EOL)? : render_source_open
    SOURCE_END              : "</source>"                                                           : drop
    HR_OPTIONS              : ("<hr />" / "<hr>" / "<hr/>" / "</hr>")                               : drop
    HR                      : ("<hr />" / "<hr>" / "<hr/>" / "</hr>") SPACE*                        : render_hr
    _SPECIAL_TAG            : NOWIKI_BEGIN/NOWIKI_END/PRE_BEGIN/PRE_END
    SPECIAL_TAG             : _SPECIAL_TAG/SOURCE_BEGIN/SOURCE_END/HR

# Characters


    _ESC_CHAR               : L_BRACKET/R_BRACKET/PIPE/L_BRACE/R_BRACE/SLASH/AMP/SEMICOLON/TAB/protocol_DROP
    ESC_CHAR                : _ESC_CHAR/LT/GT
    TITLE_END               : TITLE6_END/TITLE5_END/TITLE4_END/TITLE3_END/TITLE2_END/TITLE1_END
    ESC_SEQ                 : SPECIAL_TAG / ESC_CHAR / TITLE_END
    tab_to_space            : TAB+                                                                  : replace_by_space
    raw_char                : (!ESC_SEQ [\x20..\xff])
    raw_text                : raw_char+                                                             : join render_raw_text
    alpha_num               : [a..zA..Z0..9]
    alpha_num_text          : alpha_num+                                                            : join
    any_char                : [\x20..\xff] / tab_to_space
    any_text                : any_char+                                                             : join

# HTML tags

    value_quote             : QUOTE ((!(GT/QUOTE) any_char) / TAB)+ QUOTE                           : join
    value_apostrophe        : APOSTROPHE ((!(GT/APOSTROPHE) any_char) / TAB)+ APOSTROPHE            : join
    value_noquote           : (!(GT/SPACETAB/SLASH) raw_char)+                                      : join
    attribute_value         : (EQUAL (value_quote / value_apostrophe / value_noquote))              : liftNode
    attribute_name          : (!(EQUAL/SLASH/SPACETAB) raw_char)+                                   : join
    tag_name                : (!(SPACE/SLASH) alpha_num)+                                           : join
    optional_attribute      : SPACETABEOL+ attribute_name attribute_value?
    optional_attributes     : optional_attribute*
    tag_lt                  : LT                                                                    : drop
    tag_gt                  : GT                                                                    : drop
    tag_open                : tag_lt tag_name optional_attributes SPACETABEOL* tag_gt               : render_tag_open
    tag_close               : tag_lt SLASH tag_name tag_gt                                          : render_tag_close
    tag_autoclose           : tag_lt tag_name optional_attributes SPACETABEOL* SLASH tag_gt         : render_tag_autoclose
    tag                     : !SPECIAL_TAG (tag_autoclose / tag_open / tag_close)                   : liftNode

# HTML entities

    entity                  : AMP alpha_num_text SEMICOLON                                          : render_entity

# HTML comments

    # HTML comments are totally ignored and do not appear in the final text
    comment_content         : ((!(DASH{2} GT) [\x20..\xff])+ / SPACETABEOL)*
    html_comment            : tag_lt BANG DASH{2} comment_content DASH{2} tag_gt                    : drop
    optional_comment        : html_comment*

# Text

    page_name               : (raw_char / '/')+                                                     : join
    address                 : (!(QUOTE/R_BRACKET) [\x21..\xff])+                                    : liftValue
    url                     : protocol address                                                      : join
    inline_url              : url{1}                                                                : render_url

# Links

    allowed_in_link         : (!(R_BRACKET/PIPE) ESC_CHAR)+                                         : restore join
    link_text               : (clean_inline / allowed_in_link)*                                     : liftValue
    link_argument           : PIPE link_text                                                        : liftValue
    link_arguments          : link_argument*
    internal_link           : LINK_BEGIN page_name link_arguments LINK_END                          : render_internal_link
    optional_link_text      : SPACETAB+ link_text                                                   : liftValue
    external_link           : L_BRACKET url optional_link_text? R_BRACKET                           : render_external_link
    link                    : internal_link / external_link

# Pre, source, and nowiki tags

    EOL_KEEP                : EOL                                                                   : restore
    TAB_KEEP                : TAB                                                                   : restore
    # Preformatted acts like nowiki (disables wikitext parsing) except it cannot be inline
    tab_to_2_spaces         : TAB                                                                   : replace_by_2_spaces
    pre_text                : (tab_to_2_spaces / (!PRE_END (any_char/EOL_KEEP)))*                   : join
    preformatted            : PRE_BEGIN pre_text PRE_END SPACE*                                     : liftValue render_preformatted
    # We allow any char without parsing them as long as the tag is not closed
    eol_to_space            : EOL*                                                                  : replace_by_space
    nowiki_text             : (!NOWIKI_END (any_char/eol_to_space))*                                : join
    nowiki                  : NOWIKI_BEGIN nowiki_text NOWIKI_END                                   : liftValue
    sourcetext              : (!SOURCE_END ([\x20..\xff] / TAB_KEEP /EOL_KEEP))*                    : join render_source_text
    source                  : SOURCE_BEGIN sourcetext SOURCE_END SPACE*                             : liftValue render_source

# Text types

    inline_end              : source / preformatted / HR
    styled_text             : link / inline_url / html_comment / tag / entity
    allowed_char            : ESC_CHAR{1}                                                           : restore liftValue
    allowed_text            : !inline_end (raw_text / LT / GT / tab_to_space / allowed_char)        : liftNode
    allowed_text_in_cell    : !(PIPE/BANG) allowed_text                                             : liftNode
    clean_inline            : (nowiki / source / styled_text / raw_text)+                           : @
    inline                  : (nowiki / source / styled_text / allowed_text)+                       : @
    inline_cell             : (nowiki / source / styled_text / allowed_text_in_cell)+               : @

# Paragraphs

    special_line_begin      : SPACE/EQUAL/BULLET/HASH/COLON/DASH{4}/TABLE_BEGIN/SEMICOLON
    paragraph_inline        : !inline_end inline                                                    : liftNode
    paragraph_line          : !(special_line_begin / inline_end) paragraph_inline EOL?              : liftValue
    paragraph               : paragraph_line+                                                       : liftValue render_paragraph
    blank_paragraph         : EOL{2}                                                                : drop keep
    paragraphs              : (blank_paragraph/paragraph)+

# Titles

    title6                  : TITLE6_BEGIN inline TITLE6_END                                        : liftValue render_title6
    title5                  : TITLE5_BEGIN inline TITLE5_END                                        : liftValue render_title5
    title4                  : TITLE4_BEGIN inline TITLE4_END                                        : liftValue render_title4
    title3                  : TITLE3_BEGIN inline TITLE3_END                                        : liftValue render_title3
    title2                  : TITLE2_BEGIN inline TITLE2_END                                        : liftValue render_title2
    title1                  : TITLE1_BEGIN inline TITLE1_END                                        : liftValue render_title1
    title                   : title6 / title5 / title4 / title3 / title2 / title1

# Lists

    LIST_CHAR               : BULLET / HASH / COLON / SEMICOLON
    list_leaf_content       : !LIST_CHAR inline EOL?                                                : liftValue

    bullet_list_leaf        : BULLET optional_comment list_leaf_content                             : liftValue
    bullet_sub_list         : BULLET optional_comment list_item                                     : @

    number_list_leaf        : HASH optional_comment list_leaf_content                               : liftValue
    number_sub_list         : HASH optional_comment list_item                                       : @

    colon_list_leaf         : COLON optional_comment list_leaf_content                              : liftValue
    colon_sub_list          : COLON optional_comment list_item                                      : @

    semi_colon_list_leaf    : SEMICOLON optional_comment list_leaf_content                          : liftValue
    semi_colon_sub_list     : SEMICOLON optional_comment list_item                                  : @

    list_leaf               : semi_colon_list_leaf/colon_list_leaf/number_list_leaf/bullet_list_leaf: @
    sub_list                : semi_colon_sub_list/colon_sub_list/number_sub_list/bullet_sub_list    : @
    list_item               : sub_list / list_leaf                                                  : @
    list                    : list_item+                                                            : render_list

# Preformatted lines

    tab_to_8_spaces         : TAB                                                                   : replace_by_8_spaces
    any_char_but_tab        : raw_text / LT / GT / (!TAB ESC_CHAR)                                  : join
    preformatted_inline     : (tab_to_8_spaces / source / nowiki / styled_text / any_char_but_tab)+
    preformatted_line       : SPACE preformatted_inline EOL_KEEP                                    : liftValue
    preformatted_lines      : preformatted_line+                                                    : render_preformatted

# Special lines

    horizontal_rule         : DASH{4} DASH* inline* EOL                                             : liftValue keep render_hr

    # This should never happen
    invalid_line            : any_text EOL                                                          : liftValue render_invalid

# Tables

    HTML_attribute          : SPACETAB* attribute_name attribute_value SPACETAB*                    : render_attribute
    table_parameters_pipe   : (SPACETAB* HTML_attribute+ SPACETAB* PIPE !PIPE)?                     : liftNode
    table_parameters        : (HTML_attribute / clean_inline)+
    table_parameter         : table_parameters_pipe{0..1}                                           : liftValue
    table_wikitext          : list/horizontal_rule/preformatted_lines/title/table_structure
    table_inline            : !(PIPE/BANG) inline_cell EOL?                                         : liftValue
    table_paragraph         : (!(PIPE/BANG/TABLE_NEWLINE/TABLE_TITLE/TABLE_END) paragraph_line)     : render_paragraph
    table_multiline_content : (table_paragraph / source / preformatted / table_wikitext / EOL)*
    table_cell_content      : table_inline? table_multiline_content                                 : liftValue
    table_cell              : table_parameter table_cell_content
    table_other_cell        : (PIPE{2} table_cell)*                                                 : liftValue liftNode
    table_line_cells        : PIPE table_cell table_other_cell                                      : render_table_normal_cell
    table_line_header       : BANG table_cell table_other_cell                                      : render_table_header_cell
    table_empty_cell        : PIPE EOL &(PIPE/BANG/TABLE_END)                                       : keep render_table_empty_cell
    table_line_break        : TABLE_NEWLINE table_parameters* EOL                                   : keep liftValue render_table_line_break
    table_title             : TABLE_TITLE table_parameter inline EOL                                : liftValue render_table_caption
    table_special_line      : table_title / table_line_break
    table_normal_line       : table_empty_cell / table_line_cells / table_line_header
    table_line              : !TABLE_END (table_special_line / table_normal_line)                   : liftNode
    table_content           : (table_line / EOL)*                                                   : liftNode
    table_begin             : TABLE_BEGIN table_parameters*                                         : liftValue
    table_structure         : table_begin SPACETABEOL* table_content TABLE_END                      : @ liftValue render_table
    table                   : table_structure EOL                                                   : liftValue

# Top pattern

    valid_syntax            : list/horizontal_rule/preformatted_lines/title/table/source/preformatted/HR/EOL/paragraphs
    wikitext                : optional_comment (valid_syntax/invalid_line)+                         : liftValue render_wikitext
    body                    : wikitext{1}                                                           : liftValue render_body
